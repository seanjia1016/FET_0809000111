package flow;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

import org.apache.log4j.PropertyConfigurator;

import com.avaya.sce.runtimecommon.ITraceInfo;
import com.avaya.sce.runtimecommon.IVariableField;
import com.avaya.sce.runtimecommon.IComplexVariable;
import com.avaya.sce.runtimecommon.IVariable;
import com.crm.utils.Utils;

/**
 * A basic servlet which allows a user to define their code, generate any
 * output, and to select where to transition to next. Last generated by
 * Orchestration Designer at: 2016年3月14日 下午04時51分45秒
 */
public class getConfig extends com.avaya.sce.runtime.BasicServlet {

	// {{START:CLASS:FIELDS
	// }}END:CLASS:FIELDS

	/**
	 * Default constructor Last generated by Orchestration Designer at:
	 * 2016年3月14日 下午04時51分45秒
	 */
	public getConfig() {
		// {{START:CLASS:CONSTRUCTOR
		super();
		// }}END:CLASS:CONSTRUCTOR
	}

	/**
	 * This method allows for custom integration with other Java components. You
	 * may use Java for sophisticated logic or to integrate with custom
	 * connectors (i.e. JMS, custom web services, sockets, XML, JAXB, etc.)
	 * 
	 * Any custom code added here should work as efficiently as possible to
	 * prevent delays. It's important to design your callflow so that the voice
	 * browser (Voice Portal/IR) is not waiting too long for a response as this
	 * can lead to a poor caller experience. Additionally, if the response to
	 * the client voice browser exceeds the configured timeout, the platform may
	 * throw an "error.badfetch".
	 * 
	 * Using this method, you have access to all session variables through the
	 * SCESession object.
	 * 
	 * The code generator will *** NOT *** overwrite this method in the future.
	 * Last generated by Orchestration Designer at: 2016年3月14日 下午04時51分45秒
	 */
	public void servletImplementation(
			com.avaya.sce.runtimecommon.SCESession mySession) {
		IVariable variableRef_did = mySession.getVariable(IProjectVariables.DOMAINID);
		IComplexVariable complexVariable_did = variableRef_did.getComplexVariable();
		IVariableField field_did = complexVariable_did.getField(IProjectVariables.DOMAINID_FIELD_ID);
		String DomainId = field_did.getStringValue();
		DomainId = DomainId.trim();
		
		
		
		String extPropFileLocation = "/wls/AAEP_projects/AAEP"+DomainId+"/FETIVR/FET_777/";
		// String extPropFileLocation = "D:/";
		// Reload ddlog4j.properties from external location.
		String ddlog4j = extPropFileLocation + "ddlog4j.properties";

		InputStream is = null;
		try {
			is = new FileInputStream(new File(ddlog4j));
			Properties log4jProps = new Properties();

			log4jProps.load(is);

			PropertyConfigurator.configure(log4jProps);

		} catch (FileNotFoundException e) {
			System.out.println("FileNotFoundException: " + ddlog4j
					+ " is not found");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				is.close();
			} catch (Exception e2) {
				// TODO: handle exception
			}
		}
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, "jsonObject 777 start :" );
		
		
		
		// ///############################ Config
		Properties props = new Properties();
		//File f = new File("C:\\AAOD7.0.1\\workspace\\FET_777\\data\\config.properties");
		// /wls/AAEP_projects/AAEP/FETIVR/config.properties
		File f = new File("/wls/AAEP_projects/AAEP"+DomainId+"/FETIVR/FET_777/config.properties");
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, "config: " + f);
		try {
			props.load(new FileInputStream(f));
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		String test_mode = props.getProperty("test_mode");
		IVariableField variable_test_mode = mySession
				.getVariableField(
						IProjectVariables.PROPERTIES,
						IProjectVariables.PROPERTIES_FIELD_TEST__MODE);
		variable_test_mode.setValue(test_mode);
		
		String Omni = props.getProperty("Omni");
		IVariableField variable_Omni = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_OMNI);
		variable_Omni.setValue(Omni);
		

		String channel = props.getProperty("Channel");
		IVariableField variable_channel = mySession
				.getVariableField(
						IProjectVariables.PROPERTIES,
						IProjectVariables.PROPERTIES_FIELD_CHANNEL);
		variable_channel.setValue(channel);

		String timeout = props.getProperty("timeout");
		IVariableField variable_timeout = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_TIMEOUT);
		variable_timeout.setValue(timeout);
		
		
		if(Omni.equals("OFF")){
				String CRMBillingBizService_IP = props.getProperty("CRMBillingBizService_IP");
				IVariableField variable_CRMBillingBizService_IP = mySession
						.getVariableField(
							IProjectVariables.PROPERTIES,
							IProjectVariables.PROPERTIES_FIELD_CRMBILLING_BIZ_SERVICE__IP);
				variable_CRMBillingBizService_IP.setValue(CRMBillingBizService_IP);
			
			
				String CRMOEBizService_IP = props.getProperty("CRMOEBizService_IP");
				IVariableField variable_CRMOEBizService_IP = mySession
						.getVariableField(IProjectVariables.PROPERTIES,
							IProjectVariables.PROPERTIES_FIELD_CRMOEBIZ_SERVICE__IP);
				variable_CRMOEBizService_IP.setValue(CRMOEBizService_IP);
		}else{
			String CRMBillInquiryBizService_IP = props.getProperty("CRMBillInquiryBizService_IP");
			IVariableField variable_CRMBillInquiryBizService_IP = mySession
					.getVariableField(
							IProjectVariables.PROPERTIES,
							IProjectVariables.PROPERTIES_FIELD_CRMBILLING_BIZ_SERVICE__IP);
			variable_CRMBillInquiryBizService_IP.setValue(CRMBillInquiryBizService_IP);
			
			
			String CRMOExBizService_IP = props.getProperty("CRMOExBizService_IP");
			IVariableField variable_CRMOExBizService_IP = mySession
					.getVariableField(IProjectVariables.PROPERTIES,
							IProjectVariables.PROPERTIES_FIELD_CRMOEX_BIZ_SERVICE__IP);
			variable_CRMOExBizService_IP.setValue(CRMOExBizService_IP);
			
			
			String CRMOEBizService_IP = props.getProperty("CRMOExBizService_IP");
			IVariableField variable_CRMOEBizService_IP = mySession
					.getVariableField(IProjectVariables.PROPERTIES,
						IProjectVariables.PROPERTIES_FIELD_CRMOEBIZ_SERVICE__IP);
			variable_CRMOEBizService_IP.setValue(CRMOEBizService_IP);
			
		}
		
		
		
		
		String CRMCustBizService_IP = props.getProperty("CRMCustBizService_IP");
		IVariableField variable_CRMCustBizService_IP = mySession
				.getVariableField(
						IProjectVariables.PROPERTIES,
						IProjectVariables.PROPERTIES_FIELD_CRMCUST_BIZ_SERVICE__IP);
		variable_CRMCustBizService_IP.setValue(CRMCustBizService_IP);



		String ChannelID = props.getProperty("ChannelID");
		IVariableField variable_ChannelID = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_CHANNEL_ID);
		variable_ChannelID.setValue(ChannelID);
		
		Utils.setFieldString(mySession,
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_PASSWORD,
				props.getProperty("password"));

		String userID = props.getProperty("userID");
		IVariableField variable_userID = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_USER_ID);
		variable_userID.setValue(userID);

		String transChannelID = props.getProperty("transChannelID");
		IVariableField variable_transChannelID = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_TRANS_CHANNEL_ID);
		variable_transChannelID.setValue(transChannelID);

		String transSubChannel = props.getProperty("transSubChannel");
		IVariableField variable_transSubChannel = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_TRANS_SUB_CHANNEL);
		variable_transSubChannel.setValue(transSubChannel);

		String transUserID = props.getProperty("transUserID");
		IVariableField variable_transUserID = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_TRANS_USER_ID);
		variable_transUserID.setValue(transUserID);

		String transPath = props.getProperty("transPath");
		IVariableField variable_transPath = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_TRANS_PATH);
		variable_transPath.setValue(transPath);

		String opId = props.getProperty("opId");
		IVariableField variable_opId = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_OP_ID);
		variable_opId.setValue(opId);
		
		
		String channelForCfg = props.getProperty("channelForCfg");
		IVariableField variable_channelForCfg = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_CHANNEL_FOR_CFG);
		variable_channelForCfg.setValue(channelForCfg);
		

		String CreditCard_IP = props.getProperty("CreditCard_IP");
		IVariableField variable_CreditCard_IP = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_CREDIT_CARD__IP);
		variable_CreditCard_IP.setValue(CreditCard_IP);

		String repeatcall_IP = props.getProperty("repeatcall_IP");
		IVariableField variable_repeatcall_IP = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_REPEATCALL__IP);
		variable_repeatcall_IP.setValue(repeatcall_IP);

		String VIP_IP = props.getProperty("VIP_IP");
		IVariableField variable_VIP_IP = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_VIP__IP);
		variable_VIP_IP.setValue(VIP_IP);
		
		String TCVDN = props.getProperty("TCVDN");
		IVariableField variable_TCVDN = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_TCVDN);
		variable_TCVDN.setValue(TCVDN);
		
		
		String orderDetailsec = props.getProperty("orderDetailsec");
		IVariableField variable_orderDetailsec = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_ORDER_DETAILSEC);
		variable_orderDetailsec.setValue(orderDetailsec);
		
		
		
		
		String Middleware_IP = props.getProperty("Middleware_IP");
		IVariableField variable_Middleware_IP = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_MIDDLEWARE__IP);
		variable_Middleware_IP.setValue(Middleware_IP);
		
		
		//20181119_SR   CEP_IVR  IP
		String CEP_IVR_IP = props.getProperty("CEP_IVR_IP");
		IVariableField variable_CEP_IVR_IP = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_CEP__IVR__IP);
		variable_CEP_IVR_IP.setValue(CEP_IVR_IP);
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, "CEP_IVR_IP Response:" +CEP_IVR_IP);

		
		
		//20190807  DB_API_IP
		String DB_API_IP = props.getProperty("DB_API_IP");
		IVariableField variable_DB_API_IP = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_DB__API__IP);
		variable_DB_API_IP.setValue(DB_API_IP);
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, "DB_API_IP Response:" +DB_API_IP);

		String JNDINAME = props.getProperty("JNDINAME");
		IVariableField variable_JNDINAME = mySession.getVariableField(
				IProjectVariables.S__DB__API,
				IProjectVariables.S__DB__API_FIELD_JNDINAME);
		variable_JNDINAME.setValue(JNDINAME);
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, "JNDINAME Response:" +JNDINAME);
		
		//20190813 FlowName
		String FlowName = props.getProperty("FlowName");
		IVariableField variable_FlowName = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_FLOW_NAME);
		variable_FlowName.setValue(FlowName);
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, "FlowName Response:" +FlowName);
		
		
		//20190829 
		
		String sendSMSsec = props.getProperty("sendSMSsec");
		IVariableField variable_sendSMSsec = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_SEND_SMSSEC);
		variable_sendSMSsec.setValue(sendSMSsec);
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, "sendSMSsec Response:" +sendSMSsec);
		
		
		//20191016
		String checkSessionAni = props.getProperty("checkSessionAni");
		IVariableField variable_checkSessionAni = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_CHECK_SESSION_ANI);
		variable_checkSessionAni.setValue(checkSessionAni);
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, "checkSessionAni Response:" +checkSessionAni);
		
		
		//20200303
		String checkAni = props.getProperty("checkAni");
		IVariableField variable_checkAni = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_CHECK_ANI);
		variable_checkAni.setValue(checkAni);
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, "checkAni Response:" +checkAni);
		
		
		//20200605 聲紋add
		String ConsentStatus = props.getProperty("ConsentStatus");
		IVariableField variable_ConsentStatus = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_CONSENT_STATUS);
		variable_ConsentStatus.setValue(ConsentStatus);
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, "ConsentStatus Response:" +ConsentStatus);
		
		// 20200728 新增取token的傳入參數
		String get_grant_type = props.getProperty("get_grant_type");
		IVariableField variable_get_grant_type = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_GET__GRANT__TYPE);
		variable_get_grant_type.setValue(get_grant_type);
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,"get_grant_type Response:" + get_grant_type);
		
		
		String get_scope = props.getProperty("get_scope");
		IVariableField variable_get_scope = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_GET__SCOPE);
		variable_get_scope.setValue(get_scope);
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,"get_scope Response:" + get_scope);
		
		
		String update_scope = props.getProperty("update_scope");
		IVariableField variable_update_scope = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_UPDATE__SCOPE);
		variable_update_scope.setValue(update_scope);
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,"update_scope Response:" + update_scope);
		
		
		String update_grant_type = props.getProperty("update_grant_type");
		IVariableField variable_update_grant_type = mySession.getVariableField(
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_UPDATE__GRANT__TYPE);
		variable_update_grant_type.setValue(update_grant_type);
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,"update_grant_type Response:" + update_grant_type);
		
		
		//NCP對測 VDN=43726
		Utils.setFieldString(mySession,
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_NCP__VDN,
				props.getProperty("NCP_VDN", ""));
		
		
		//GET Offer code
		String[] offercode_config = { 
				"I_offerCode_JP", "I_offerCode_HK", "I_offerCode_SG",
				"I_offerCode_100G", "I_offerCode_100G_handael",
				"I_offerCode_1_2G", "I_offerCode_1_2G_handael",
				"I_offerCode_2_2G", "I_offerCode_2_2G_handael",
				"I_offerCode_5G", "I_offerCode_5G_handael",
				"I_offerCode_8G", "I_offerCode_8G_handael",
				"I_offerCode_2_G", "I_offerCode_2_G_handael",
				"I_offerCode_1_G", "I_offerCode_1_G_handael",
				"I_offerCode_250_MB", "I_offerCode_250_MB_2", "I_offerCode_250_MB_3", "I_offerCode_250_MB_4",
				"I_offerCode_1GB_3G", "I_offerCode_1GB_3G_2", "I_offerCode_1GB_3G_3", "I_offerCode_1GB_3G_4",
				"I_offerCode_1GB_3G_5", "I_offerCode_1GB_3G_6", "I_offerCode_1GB_3G_7", "I_offerCode_1GB_3G_8",
				"I_offerCode_1GB_3G_9", "I_offerCode_1GB_3G_10",
				"I_offerCode_2GB_3G", "I_offerCode_2GB_3G_2", "I_offerCode_2GB_3G_3", "I_offerCode_2GB_3G_4",
				"I_offerCode_2GB_3G_5",
				"I_offerCode_300MB_3G", "I_offerCode_300MB_3G_2",
				"I_offerCode_25MB_3G_2",
				"I_offerCode_500MB",
				"I_offerCode_Array_Query_A",
				"I_offerCode_Array2_Query_A",
				"I_offerCode_Array3_Query_A",
				"I_offerCode_Array4_Query_A",
				"I_offerCode_Array5_Query_A",
				"I_offerCode_Array6_Query_A" };
		
		for(int i = 0;i < offercode_config.length;i++) {
			Utils.setFieldString(mySession,
					IProjectVariables.PROPERTIES,
					offercode_config[i].replace("I_", ""),
					props.getProperty(offercode_config[i], ""));
		}
		
		//5G 
		String[] H_offerCode_config = { 
				"H_offerCode_JP","H_offerCode_HK", "H_offerCode_SG",
				"H_offerCode_100G", "H_offerCode_100G_handael",
				"H_offerCode_1_2G", "H_offerCode_1_2G_handael",
				"H_offerCode_2_2G", "H_offerCode_2_2G_handael",
				"H_offerCode_5G", "H_offerCode_5G_handael",
				"H_offerCode_8G", "H_offerCode_8G_handael",
				"H_offerCode_2_G", "H_offerCode_2_G_handael",
				"H_offerCode_1_G", "H_offerCode_1_G_handael",
				"H_offerCode_250_MB", "H_offerCode_250_MB_2", "H_offerCode_250_MB_3", "H_offerCode_250_MB_4",
				"H_offerCode_1GB_3G", "H_offerCode_1GB_3G_2", "H_offerCode_1GB_3G_3", "H_offerCode_1GB_3G_4",
				"H_offerCode_1GB_3G_5", "H_offerCode_1GB_3G_6", "H_offerCode_1GB_3G_7", "H_offerCode_1GB_3G_8",
				"H_offerCode_1GB_3G_9", "H_offerCode_1GB_3G_10",
				"H_offerCode_2GB_3G", "H_offerCode_2GB_3G_2", "H_offerCode_2GB_3G_3", "H_offerCode_2GB_3G_4",
				"H_offerCode_2GB_3G_5",
				"H_offerCode_300MB_3G", "H_offerCode_300MB_3G_2",
				"H_offerCode_25MB_3G_2",
				"H_offerCode_500MB",
				"H_offerCode_Array_Query_A",
				"H_offerCode_Array2_Query_A",
				"H_offerCode_Array3_Query_A",
				"H_offerCode_Array4_Query_A",
				"H_offerCode_Array5_Query_A",
				"H_offerCode_Array6_Query_A" };
		
		
		for(int i = 0;i < H_offerCode_config.length;i++) {
			Utils.setFieldString(mySession,
					IProjectVariables.PROPERTIES,
					H_offerCode_config[i],
					props.getProperty(H_offerCode_config[i], ""));
		}
		
		
		//Call_Production 剩餘金額
		Utils.setFieldString(mySession,
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_CALL__PRODUCTION__BALANCE,
				props.getProperty("Call_Production_Balance", "180"));
		
		
		//Call_Production 剩餘Data量
		Utils.setFieldString(mySession,
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_CALL__PRODUCTION__DATA__REMAINING,
				props.getProperty("Call_Production_Data_Remaining", "250"));
		
		//agent password verify，預設open
		Utils.setFieldString(mySession,
				IProjectVariables.PROPERTIES,
				IProjectVariables.PROPERTIES_FIELD_PASSWORD__VERIFY__AGENT,
				props.getProperty("Password_verify_agent", "Y"));
		
		
		Utils.setFieldString(mySession, 
				IProjectVariables.PROPERTIES, 
				IProjectVariables.PROPERTIES_FIELD_CALL__PRODUCTION__EXPIRY_DATE, 
				props.getProperty("Call_Production_ExpiryDate", "10"));
		
		Utils.setFieldInt(mySession, 
				IProjectVariables.MENU__PROP, 
				IProjectVariables.MENU__PROP_FIELD_REPEAT, 0);
		
		//CallPrediction_D_E_F 判斷是否呼叫 SIM API
		Utils.setFieldString(mySession, 
				IProjectVariables.PROPERTIES, 
				IProjectVariables.PROPERTIES_FIELD_CALL__PREDICTION__SIM__FLAG, 
				props.getProperty("Call_Prediction_SIM_Flag", "N"));
		
		//CallPrediction_D_E_F 判斷是否呼叫 queryService API (檢查VoLTE服務)
		Utils.setFieldString(mySession, 
				IProjectVariables.PROPERTIES, 
				IProjectVariables.PROPERTIES_FIELD_CALL__PREDICTION__VO_LTE__FLAG, 
				props.getProperty("Call_Prediction_VoLTE_Flag", "N"));
		
		//CallPrediction_D_E_F itemCodeName_VoLTE (0:off, 1:on)
		Utils.setFieldString(mySession, 
				IProjectVariables.PROPERTIES, 
				IProjectVariables.PROPERTIES_FIELD_CALL__PRODUCTION__ITEM_CODE__VO_LTE, 
				props.getProperty("Call_Prediction_ItemCode_VoLTE", "VoLTE"));
		
		//測試用，判斷SIM卡第9碼是否為 2G
		Utils.setFieldString(mySession, 
				IProjectVariables.PROPERTIES, 
				IProjectVariables.PROPERTIES_FIELD_TEST__SIM___2G__FLAG, 
				props.getProperty("test_SIM_2G_Flag", "N"));

	}

	/**
	 * Builds the list of branches that are defined for this servlet object.
	 * This list is built automatically by defining Goto nodes in the call flow editor.
	 * It is the programmer's responsibilty to provide at least one enabled Goto.<BR>
	 *
	 * The user should override updateBranches() to determine which Goto that the
	 * framework will activate.  If there is not at least one enabled Goto item, 
	 * the framework will throw a runtime exception.<BR>
	 *
	 * This method is generated automatically and changes to it may
	 * be overwritten next time code is generated.  To modify the list
	 * of branches for the flow item, override:
	 *     <code>updateBranches(Collection branches, SCESession mySession)</code>
	 *
	 * @return a Collection of <code>com.avaya.sce.runtime.Goto</code>
	 * objects that will be evaluated at runtime.  If there are no gotos
	 * defined in the Servlet node, then this returns null.
	 * Last generated by Orchestration Designer at: 2024年9月13日 上午10時41分03秒
	 */
	public java.util.Collection getBranches(com.avaya.sce.runtimecommon.SCESession mySession) {
		java.util.List list = null;
		com.avaya.sce.runtime.Goto aGoto = null;
		list = new java.util.ArrayList(1);

		aGoto = new com.avaya.sce.runtime.Goto("getConfig_volume", 0, true, "Default");
		list.add(aGoto);

		return list;
	}
}
