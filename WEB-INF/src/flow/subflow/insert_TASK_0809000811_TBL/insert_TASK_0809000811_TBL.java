package flow.subflow.insert_TASK_0809000811_TBL;

import com.avaya.sce.runtimecommon.IComplexVariable;
import com.avaya.sce.runtimecommon.ITraceInfo;
import com.avaya.sce.runtimecommon.IVariable;
import com.avaya.sce.runtimecommon.IVariableField;
import com.crm.utils.Utils;

import flow.IProjectVariables;

/**
 * A basic servlet which allows a user to define their code, generate any
 * output, and to select where to transition to next. Last generated by
 * Orchestration Designer at: 2024年11月22日 下午01時33分12秒
 */
public class insert_TASK_0809000811_TBL extends com.avaya.sce.runtime.BasicServlet {

	// {{START:CLASS:FIELDS
	// }}END:CLASS:FIELDS

	/**
	 * Default constructor Last generated by Orchestration Designer at: 2024年11月22日
	 * 下午01時33分12秒
	 */
	public insert_TASK_0809000811_TBL() {
		// {{START:CLASS:CONSTRUCTOR
		super();
		// }}END:CLASS:CONSTRUCTOR
	}

	/**
	 * This method allows for custom integration with other Java components. You may
	 * use Java for sophisticated logic or to integrate with custom connectors (i.e.
	 * JMS, custom web services, sockets, XML, JAXB, etc.)
	 *
	 * Any custom code added here should work as efficiently as possible to prevent
	 * delays. It's important to design your callflow so that the voice browser
	 * (Experienve Portal/IR) is not waiting too long for a response as this can
	 * lead to a poor caller experience. Additionally, if the response to the client
	 * voice browser exceeds the configured timeout, the platform may throw an
	 * "error.badfetch".
	 *
	 * Using this method, you have access to all session variables through the
	 * SCESession object.
	 *
	 * The code generator will *** NOT *** overwrite this method in the future. Last
	 * generated by Orchestration Designer at: 2024年11月22日 下午01時33分12秒
	 */
	public void servletImplementation(com.avaya.sce.runtimecommon.SCESession mySession) {

		IVariable TIDVarible = mySession.getVariable(IProjectVariables.S__TID);
		IComplexVariable complexTID = TIDVarible.getComplexVariable();
		IVariableField TIDfield = complexTID.getField(IProjectVariables.S__TID_FIELD_TID);
		String TID = TIDfield.getStringValue();

		IVariable TASK_0809000811_Varible = mySession.getVariable(IProjectVariables.TASK___0_8_0_9_0_0_0_8_1_1__TBL);
		IComplexVariable TASK_0809000811_ComplexVarible = TASK_0809000811_Varible.getComplexVariable();

		IVariableField TASK_0809000811_ANI_Field = TASK_0809000811_ComplexVarible
				.getField(IProjectVariables.TASK___0_8_0_9_0_0_0_8_1_1__TBL_FIELD_ANI);
		String ani = TASK_0809000811_ANI_Field.getStringValue();

		IVariableField TASK_0809000811_REQ_DATE_Field = TASK_0809000811_ComplexVarible
				.getField(IProjectVariables.TASK___0_8_0_9_0_0_0_8_1_1__TBL_FIELD_REQ__DATE);
		String req_date = TASK_0809000811_REQ_DATE_Field.getStringValue();

		IVariableField TASK_0809000811_REQ_TIME_Field = TASK_0809000811_ComplexVarible
				.getField(IProjectVariables.TASK___0_8_0_9_0_0_0_8_1_1__TBL_FIELD_REQ__TIME);
		String req_time = TASK_0809000811_REQ_TIME_Field.getStringValue();

		IVariableField TASK_0809000811_S_TIME_Field = TASK_0809000811_ComplexVarible
				.getField(IProjectVariables.TASK___0_8_0_9_0_0_0_8_1_1__TBL_FIELD_S__TIME);
		String s_time = TASK_0809000811_S_TIME_Field.getStringValue();

		IVariableField TASK_0809000811_E_TIME_Field = TASK_0809000811_ComplexVarible
				.getField(IProjectVariables.TASK___0_8_0_9_0_0_0_8_1_1__TBL_FIELD_E__TIME);
		String e_time = TASK_0809000811_E_TIME_Field.getStringValue();

		IVariableField TASK_0809000811_BDIP_Field = TASK_0809000811_ComplexVarible
				.getField(IProjectVariables.TASK___0_8_0_9_0_0_0_8_1_1__TBL_FIELD_BDIP);
		String bdip = TASK_0809000811_BDIP_Field.getStringValue();

		String job = Utils.getFieldString(mySession, IProjectVariables.TASK___0_8_0_9_0_0_0_8_1_1__TBL,
				IProjectVariables.TASK___0_8_0_9_0_0_0_8_1_1__TBL_FIELD_JOB);

		String vdn = Utils.getFieldString(mySession, IProjectVariables.CH__PROPERTIES,
				IProjectVariables.CH__PROPERTIES_FIELD_VDN);

		String reason = Utils.getFieldString(mySession, IProjectVariables.TASK___0_8_0_9_0_0_0_8_1_1__TBL,
				IProjectVariables.TASK___0_8_0_9_0_0_0_8_1_1__TBL_FIELD_REASON);

		String enterprise = Utils.getFieldString(mySession, IProjectVariables.TASK___0_8_0_9_0_0_0_8_1_1__TBL,
				IProjectVariables.TASK___0_8_0_9_0_0_0_8_1_1__TBL_FIELD_ENTERPRISE);

		String voucherNumber = Utils.getFieldString(mySession, IProjectVariables.DN___5_5_6_0_2_4,
				IProjectVariables.DN___5_5_6_0_2_4_FIELD_UTTERANCE);

		String voucherPinCode = Utils.getFieldString(mySession, IProjectVariables.QUERY_VOUCHER_CARD_SERVICE__OUTPUT,
				IProjectVariables.QUERY_VOUCHER_CARD_SERVICE__OUTPUT_FIELD_PIN_CODE);

		String amt = Utils.getFieldString(mySession, IProjectVariables.QUERY_VOUCHER_CARD_SERVICE__OUTPUT,
				IProjectVariables.QUERY_VOUCHER_CARD_SERVICE__OUTPUT_FIELD_VALUE);

		String status = Utils.getFieldString(mySession, IProjectVariables.QUERY_VOUCHER_CARD_SERVICE__OUTPUT,
				IProjectVariables.QUERY_VOUCHER_CARD_SERVICE__OUTPUT_FIELD_STATUS);

		String ret_code = Utils.getFieldString(mySession, IProjectVariables.QUERY_VOUCHER_CARD_SERVICE__OUTPUT,
				IProjectVariables.QUERY_VOUCHER_CARD_SERVICE__OUTPUT_FIELD_RETURNCODE);

		IVariable QUERY_VOUCHER_CARD_SERVICE__OUTPUT_Varible = mySession
				.getVariable(IProjectVariables.QUERY_VOUCHER_CARD_SERVICE__OUTPUT);
		IComplexVariable QUERY_VOUCHER_CARD_SERVICE__OUTPUT_ComplexVarible = QUERY_VOUCHER_CARD_SERVICE__OUTPUT_Varible
				.getComplexVariable();

		IVariableField QUERY_VOUCHER_CARD_SERVICE__OUTPUT_FIELD_MSISDN_Field = TASK_0809000811_ComplexVarible
				.getField(IProjectVariables.QUERY_VOUCHER_CARD_SERVICE__OUTPUT_FIELD_MSISDN);
		String msisdn = QUERY_VOUCHER_CARD_SERVICE__OUTPUT_FIELD_MSISDN_Field.getStringValue();

		IVariableField QUERY_VOUCHER_CARD_SERVICE__OUTPUT_FIELD_VALUE_Field = TASK_0809000811_ComplexVarible
				.getField(IProjectVariables.QUERY_VOUCHER_CARD_SERVICE__OUTPUT_FIELD_VALUE);
		String value = QUERY_VOUCHER_CARD_SERVICE__OUTPUT_FIELD_VALUE_Field.getStringValue();

		String insert_TASK_0809000811_TBL = "insert TASK_0809000811_TBL";

		String SQL = "INSERT INTO TASK_0809000811_TBL (ANI, MSISDN, REQ_DATE, REQ_TIME, S_TIME, E_TIME, voucherNumber, voucherPinCode, JOB, REASON, RET_CODE , STATUS , AMT , BPID , ENTERPRISE , OUT_VDN)"
				+ "VALUES ('" + ani + "', '" + msisdn + "', '" + req_date + "', '" + req_time + "', '" + s_time + "', '"
				+ e_time + "', '" + voucherNumber + "', '" + voucherPinCode + "', '" + job + "', '" + reason + "', '"
				+ ret_code + "', '" + status + "', '" + amt + "', '" + bdip + "', , '" + enterprise + "', '" + vdn
				+ "')";

		String Table = "TASK_0809000811_TBL";

		IVariableField SQL_varible = mySession.getVariableField(IProjectVariables.S__DB__API,
				IProjectVariables.S__DB__API_FIELD_SQL);
		SQL_varible.setValue(SQL);
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
				"SQL Response(TID:[" + TID + "]" + insert_TASK_0809000811_TBL + "):" + SQL);

		IVariableField Table_varible = mySession.getVariableField(IProjectVariables.S__DB__API,
				IProjectVariables.S__DB__API_FIELD_TABLE);
		Table_varible.setValue(Table);
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
				"Table Response(TID:[" + TID + "]" + insert_TASK_0809000811_TBL + "):" + Table);

	}

	/**
	 * Builds the list of branches that are defined for this servlet object.
	 * This list is built automatically by defining Goto nodes in the call flow editor.
	 * It is the programmer's responsibilty to provide at least one enabled Goto.<BR>
	 *
	 * The user should override updateBranches() to determine which Goto that the
	 * framework will activate.  If there is not at least one enabled Goto item, 
	 * the framework will throw a runtime exception.<BR>
	 *
	 * This method is generated automatically and changes to it may
	 * be overwritten next time code is generated.  To modify the list
	 * of branches for the flow item, override:
	 *     <code>updateBranches(Collection branches, SCESession mySession)</code>
	 *
	 * @return a Collection of <code>com.avaya.sce.runtime.Goto</code>
	 * objects that will be evaluated at runtime.  If there are no gotos
	 * defined in the Servlet node, then this returns null.
	 * Last generated by Orchestration Designer at: 2024年11月22日 下午09時46分14秒
	 */
	public java.util.Collection getBranches(com.avaya.sce.runtimecommon.SCESession mySession) {
		java.util.List list = null;
		com.avaya.sce.runtime.Goto aGoto = null;
		list = new java.util.ArrayList(1);

		aGoto = new com.avaya.sce.runtime.Goto("insert_TASK_0809000811_TBL-CF_insetDBAPI", 0, true, "Default");
		list.add(aGoto);

		return list;
	}
}
